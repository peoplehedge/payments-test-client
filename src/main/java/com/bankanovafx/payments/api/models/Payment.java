/*
 * PaymentsAPI
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.bankanovafx.payments.api.models;

import java.util.*;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;

@JsonInclude(Include.ALWAYS)
public class Payment 
        implements java.io.Serializable {
    private static final long serialVersionUID = -6894046297341968549L;
    private Integer id;
    private int quoteId;
    private Originator originator;
    private BankAccount originatorBankAccount;
    private Beneficiary beneficiary;
    private BankAccount beneficiaryBankAccount;
    private BankAccount intermediaryBankAccount;
    private PaymentDetails details;
    private PaymentStatus status;
    /** GETTER
     * Payment ID
     */
    @JsonGetter("id")
    public Integer getId ( ) { 
        return this.id;
    }
    
    /** SETTER
     * Payment ID
     */
    @JsonSetter("id")
    public void setId (Integer value) { 
        this.id = value;
    }
 
    /** GETTER
     * Quote ID
     */
    @JsonGetter("quoteId")
    public int getQuoteId ( ) { 
        return this.quoteId;
    }
    
    /** SETTER
     * Quote ID
     */
    @JsonSetter("quoteId")
    public void setQuoteId (int value) { 
        this.quoteId = value;
    }
 
    /** GETTER
     * Originator Information Object
     */
    @JsonGetter("originator")
    public Originator getOriginator ( ) { 
        return this.originator;
    }
    
    /** SETTER
     * Originator Information Object
     */
    @JsonSetter("originator")
    public void setOriginator (Originator value) { 
        this.originator = value;
    }
 
    /** GETTER
     * Bank Account Information Object. **NOTE** - originatorBankAccount bank data should not be provided when creating a new Payment. This information is retrieved from the database based on the provided bank ID.**NOTE** - bank object is required for all BankAccount objects except originatorBankAccount
     */
    @JsonGetter("originatorBankAccount")
    public BankAccount getOriginatorBankAccount ( ) { 
        return this.originatorBankAccount;
    }
    
    /** SETTER
     * Bank Account Information Object. **NOTE** - originatorBankAccount bank data should not be provided when creating a new Payment. This information is retrieved from the database based on the provided bank ID.**NOTE** - bank object is required for all BankAccount objects except originatorBankAccount
     */
    @JsonSetter("originatorBankAccount")
    public void setOriginatorBankAccount (BankAccount value) { 
        this.originatorBankAccount = value;
    }
 
    /** GETTER
     * Beneficiary Information Object
     */
    @JsonGetter("beneficiary")
    public Beneficiary getBeneficiary ( ) { 
        return this.beneficiary;
    }
    
    /** SETTER
     * Beneficiary Information Object
     */
    @JsonSetter("beneficiary")
    public void setBeneficiary (Beneficiary value) { 
        this.beneficiary = value;
    }
 
    /** GETTER
     * Bank Account Information Object. **NOTE** - originatorBankAccount bank data should not be provided when creating a new Payment. This information is retrieved from the database based on the provided bank ID.**NOTE** - bank object is required for all BankAccount objects except originatorBankAccount
     */
    @JsonGetter("beneficiaryBankAccount")
    public BankAccount getBeneficiaryBankAccount ( ) { 
        return this.beneficiaryBankAccount;
    }
    
    /** SETTER
     * Bank Account Information Object. **NOTE** - originatorBankAccount bank data should not be provided when creating a new Payment. This information is retrieved from the database based on the provided bank ID.**NOTE** - bank object is required for all BankAccount objects except originatorBankAccount
     */
    @JsonSetter("beneficiaryBankAccount")
    public void setBeneficiaryBankAccount (BankAccount value) { 
        this.beneficiaryBankAccount = value;
    }
 
    /** GETTER
     * Bank Account Information Object. **NOTE** - originatorBankAccount bank data should not be provided when creating a new Payment. This information is retrieved from the database based on the provided bank ID.**NOTE** - bank object is required for all BankAccount objects except originatorBankAccount
     */
    @JsonGetter("intermediaryBankAccount")
    public BankAccount getIntermediaryBankAccount ( ) { 
        return this.intermediaryBankAccount;
    }
    
    /** SETTER
     * Bank Account Information Object. **NOTE** - originatorBankAccount bank data should not be provided when creating a new Payment. This information is retrieved from the database based on the provided bank ID.**NOTE** - bank object is required for all BankAccount objects except originatorBankAccount
     */
    @JsonSetter("intermediaryBankAccount")
    public void setIntermediaryBankAccount (BankAccount value) { 
        this.intermediaryBankAccount = value;
    }
 
    /** GETTER
     * Payment Information Data
     */
    @JsonGetter("details")
    public PaymentDetails getDetails ( ) { 
        return this.details;
    }
    
    /** SETTER
     * Payment Information Data
     */
    @JsonSetter("details")
    public void setDetails (PaymentDetails value) { 
        this.details = value;
    }
 
    /** GETTER
     * Payment Information Data
     */
    @JsonGetter("status")
    public PaymentStatus getStatus ( ) { 
        return this.status;
    }
    
    /** SETTER
     * Payment Information Data
     */
    @JsonSetter("status")
    public void setStatus (PaymentStatus value) { 
        this.status = value;
    }
 
}
